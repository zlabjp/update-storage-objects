<%
  def tag(version); version.sub(/^stable-/, ''); end
  def image_resource_name(version); "update-storage-objects-image-" + tag(version); end
  kubernetes_versions = %w(stable-1.7 stable-1.8 stable-1.9 latest)
%>
# ci/pipeline.yml
#
# DO NOT MAKE CHANGES TO THIS FILE. Instead, modify ci/pipeline.yml.erb and
# make ci/pipeline.yml.
#
# Updated: <%= DateTime.now.to_s %>
#
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
- name: file-url
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest

resources:
- name: debian-base-amd64
  type: docker-image
  source:
    repository: k8s.gcr.io/debian-base-amd64
    tag: "0.3"
- name: update-storage-objects
  type: git
  source:
    uri: git://github.com/zlabjp/update-storage-objects.git
    branch: master
- name: notify
  type: slack-notification
  source:
    url: ((slack-url))
<% kubernetes_versions.each do |version| %>
- name: <%= image_resource_name(version) %>
  type: docker-image
  source:
    repository: zlabjp/update-storage-objects
    tag: <%= tag(version) %>
    username: ((docker-username))
    password: ((docker-password))

<% end %>
<% kubernetes_versions.each do |version| %>
- name: <%= version %>
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/<%= version %>.txt
    filename: version
<% end %>

jobs:
<% kubernetes_versions.each do |version| %>
- name: build-<%= image_resource_name(version) %>
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: update-storage-objects
        trigger: true
      - get: debian-base-amd64
        params: {save: true}
        trigger: true
      - get: <%= version %>
        trigger: true
    - task: create-build-args-file
      file: update-storage-objects/ci/tasks/create-build-args-file.yml
      input_mapping: {version: <%= version %>}
    - put: <%= image_resource_name(version) %>
      params:
        build: update-storage-objects
        load_base: debian-base-amd64
        build_args_file: output/build-args-file
    on_success:
      put: notify
      params:
        channel: ((slack-success-channel))
        username: concourse / <%= image_resource_name(version) %>
        icon_emoji: ":dancing-penguin:"
        text: |
          Success! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    on_failure:
      put: notify
      params:
        channel: ((slack-failure-channel))
        username: concourse / <%= image_resource_name(version) %>
        icon_emoji: ":rage:"
        text: |
          Failure! $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
<% end %>
